// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/spoke-d/thermionic/internal/db/cluster (interfaces: APIExtensions)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAPIExtensions is a mock of APIExtensions interface
type MockAPIExtensions struct {
	ctrl     *gomock.Controller
	recorder *MockAPIExtensionsMockRecorder
}

// MockAPIExtensionsMockRecorder is the mock recorder for MockAPIExtensions
type MockAPIExtensionsMockRecorder struct {
	mock *MockAPIExtensions
}

// NewMockAPIExtensions creates a new mock instance
func NewMockAPIExtensions(ctrl *gomock.Controller) *MockAPIExtensions {
	mock := &MockAPIExtensions{ctrl: ctrl}
	mock.recorder = &MockAPIExtensionsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAPIExtensions) EXPECT() *MockAPIExtensionsMockRecorder {
	return m.recorder
}

// Count mocks base method
func (m *MockAPIExtensions) Count() int {
	ret := m.ctrl.Call(m, "Count")
	ret0, _ := ret[0].(int)
	return ret0
}

// Count indicates an expected call of Count
func (mr *MockAPIExtensionsMockRecorder) Count() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Count", reflect.TypeOf((*MockAPIExtensions)(nil).Count))
}
