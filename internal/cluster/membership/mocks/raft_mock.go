// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/spoke-d/thermionic/internal/cluster/membership (interfaces: RaftInstance)

// Package mocks is a generated GoMock package.
package mocks

import (
	raft_membership "github.com/CanonicalLtd/raft-membership"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRaftInstance is a mock of RaftInstance interface
type MockRaftInstance struct {
	ctrl     *gomock.Controller
	recorder *MockRaftInstanceMockRecorder
}

// MockRaftInstanceMockRecorder is the mock recorder for MockRaftInstance
type MockRaftInstanceMockRecorder struct {
	mock *MockRaftInstance
}

// NewMockRaftInstance creates a new mock instance
func NewMockRaftInstance(ctrl *gomock.Controller) *MockRaftInstance {
	mock := &MockRaftInstance{ctrl: ctrl}
	mock.recorder = &MockRaftInstanceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRaftInstance) EXPECT() *MockRaftInstanceMockRecorder {
	return m.recorder
}

// MembershipChanger mocks base method
func (m *MockRaftInstance) MembershipChanger() raft_membership.Changer {
	ret := m.ctrl.Call(m, "MembershipChanger")
	ret0, _ := ret[0].(raft_membership.Changer)
	return ret0
}

// MembershipChanger indicates an expected call of MembershipChanger
func (mr *MockRaftInstanceMockRecorder) MembershipChanger() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MembershipChanger", reflect.TypeOf((*MockRaftInstance)(nil).MembershipChanger))
}
