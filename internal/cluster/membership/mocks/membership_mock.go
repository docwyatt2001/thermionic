// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/spoke-d/thermionic/internal/cluster/membership (interfaces: Membership)

// Package mocks is a generated GoMock package.
package mocks

import (
	raft_http "github.com/CanonicalLtd/raft-http"
	gomock "github.com/golang/mock/gomock"
	raft "github.com/hashicorp/raft"
	reflect "reflect"
	time "time"
)

// MockMembership is a mock of Membership interface
type MockMembership struct {
	ctrl     *gomock.Controller
	recorder *MockMembershipMockRecorder
}

// MockMembershipMockRecorder is the mock recorder for MockMembership
type MockMembershipMockRecorder struct {
	mock *MockMembership
}

// NewMockMembership creates a new mock instance
func NewMockMembership(ctrl *gomock.Controller) *MockMembership {
	mock := &MockMembership{ctrl: ctrl}
	mock.recorder = &MockMembershipMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMembership) EXPECT() *MockMembershipMockRecorder {
	return m.recorder
}

// Change mocks base method
func (m *MockMembership) Change(arg0 raft_http.Dial, arg1 raft.ServerID, arg2, arg3 string, arg4 time.Duration) error {
	ret := m.ctrl.Call(m, "Change", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// Change indicates an expected call of Change
func (mr *MockMembershipMockRecorder) Change(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Change", reflect.TypeOf((*MockMembership)(nil).Change), arg0, arg1, arg2, arg3, arg4)
}
