// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/spoke-d/thermionic/internal/cluster/raft (interfaces: AddressResolver)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	net "net"
	reflect "reflect"
)

// MockAddressResolver is a mock of AddressResolver interface
type MockAddressResolver struct {
	ctrl     *gomock.Controller
	recorder *MockAddressResolverMockRecorder
}

// MockAddressResolverMockRecorder is the mock recorder for MockAddressResolver
type MockAddressResolverMockRecorder struct {
	mock *MockAddressResolver
}

// NewMockAddressResolver creates a new mock instance
func NewMockAddressResolver(ctrl *gomock.Controller) *MockAddressResolver {
	mock := &MockAddressResolver{ctrl: ctrl}
	mock.recorder = &MockAddressResolverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAddressResolver) EXPECT() *MockAddressResolverMockRecorder {
	return m.recorder
}

// Resolve mocks base method
func (m *MockAddressResolver) Resolve(arg0 string) (net.Addr, error) {
	ret := m.ctrl.Call(m, "Resolve", arg0)
	ret0, _ := ret[0].(net.Addr)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Resolve indicates an expected call of Resolve
func (mr *MockAddressResolverMockRecorder) Resolve(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Resolve", reflect.TypeOf((*MockAddressResolver)(nil).Resolve), arg0)
}
